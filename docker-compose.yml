version: '3.8'

services:
  nginx:
    image: nginx:alpine
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./nginx/conf.d/app-links:/etc/nginx/conf.d/app-links:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      - fintrack
      - finance-security
    networks:
      - app-network

  db:
    image: postgres:16
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - '${POSTGRES_PORT:-5432}:5432'
    volumes:
      - db_data:/var/lib/postgresql/data
      - postgres_logs:/var/log/postgresql
    networks:
      - app-network
#    healthcheck:
#      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
#      interval: 10s
#      timeout: 5s
#      retries: 5

  migrator:
    build:
      context: ./migrator
      dockerfile: Dockerfile
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/${POSTGRES_DB}
      - SPRING_DATASOURCE_USERNAME=${POSTGRES_USER}
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD}
      - FLYWAY_URL=jdbc:postgresql://db:5432/${POSTGRES_DB}
      - FLYWAY_USER=${POSTGRES_USER}
      - FLYWAY_PASSWORD=${POSTGRES_PASSWORD}
      - FLYWAY_CONNECT_RETRIES=10
      - FLYWAY_SCHEMAS=public
      - SPRING_PROFILES_ACTIVE=prod
    depends_on:
      - db
    networks:
      - app-network

  finance-security:
    build:
      context: ./finance-security
      dockerfile: Dockerfile
    restart: always
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/${POSTGRES_DB}
      - SPRING_DATASOURCE_USERNAME=${POSTGRES_USER}
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD}
      - JAVA_OPTS=${JAVA_OPTS}
      - JWT_SECRET=${JWT_SECRET}
      - RESEND_API_KEY=${RESEND_API_KEY}
      - LOGGING_LEVEL_ROOT=DEBUG
      - LOGGING_LEVEL_COM_FINTRACK=DEBUG
    depends_on:
      - db
      - migrator
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  fintrack:
    build:
      context: ./fintrack
      dockerfile: Dockerfile
    restart: always
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/${POSTGRES_DB}
      - SPRING_DATASOURCE_USERNAME=${POSTGRES_USER}
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD}
      - DEEPSEEK_API_KEY=${DEEPSEEK_API_KEY}
      - JAVA_OPTS=${JAVA_OPTS}
      - JWT_SECRET=${JWT_SECRET}
      - SECURITY_SERVICE_URL=http://finance-security:8080
      - LOGGING_LEVEL_ROOT=DEBUG
      - LOGGING_LEVEL_COM_FINTRACK=DEBUG
      # --- Google (relaxed binding) ---
      - GOOGLE_API_URL=https://androidpublisher.googleapis.com/androidpublisher/v3
      - GOOGLE_PACKAGE_NAME=kz.finance.fintrack
      - GOOGLE_ALLOWED_PRODUCTS=fintrack_pro_month,fintrack_pro_year
      - GOOGLE_SERVICE_ACCOUNT_PATH=/app/secure/google-service-account.json
    volumes:
      # монтируем JSON ключ внутрь контейнера только для чтения
      - /root/fintrack/secure/google-service-account.json:/app/secure/google-service-account.json:ro
    depends_on:
      - db
      - migrator
      - finance-security
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  app-network:
    driver: bridge

volumes:
  db_data:
    driver: local
  nginx_logs:
    driver: local
  postgres_logs:
    driver: local
